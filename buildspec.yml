version: 0.2

env:
  variables:
    IMAGE_REPO_NAME: "devops-app-repo"
    IMAGE_TAG: "latest"
    AWS_REGION: "us-east-1"

phases:
  install:
    runtime-versions:
      python: 3.9
  pre_build:
    commands:
      - set -e
      - echo Logging in to Amazon ECR...
      - ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - echo "Account ID is $ACCOUNT_ID"
      - |
        if [ "$ACCOUNT_ID" = "None" ] || [ -z "$ACCOUNT_ID" ]; then
          echo "ERROR: Failed to get Account ID"
          exit 1
        fi
      - REPOSITORY_URI=$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - echo "ECR Repo URI:$REPOSITORY_URI"
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $REPOSITORY_URI

      - echo Making Python scripts executable...
      - chmod +x scripts/*.py

      - echo Installing Terraform...
      - rm -rf terraform_1.8.5_linux_amd64.zip
      - curl -LO https://releases.hashicorp.com/terraform/1.8.5/terraform_1.8.5_linux_amd64.zip
      - mkdir -p /tmp/terraform_install
      - unzip -o terraform_1.8.5_linux_amd64.zip -d /tmp/terraform_install
      - chmod +x /tmp/terraform_install/terraform
      - mv /tmp/terraform_install/terraform /usr/local/bin/
      - terraform version

  build:
    commands:
      - echo Building Docker image...
      - docker build -t $IMAGE_REPO_NAME ./flask_web_app/app
      - "docker tag $IMAGE_REPO_NAME:latest $REPOSITORY_URI:$IMAGE_TAG"
      - echo Pushing Docker image to ECR...
      - "docker push $REPOSITORY_URI:$IMAGE_TAG"

      - echo Running Terraform to provision/update infrastructure...
      - cd terraform
      - terraform init
      - terraform apply -auto-approve

  post_build:
    commands:
      - echo Build completed on `date`

artifacts:
  files:
    - appspec.yml
    - scripts/**/*